#include <stdio.h>
#include <stdlib.h>
#include "aux.h"
#include "util.h"
#include "fourier.h"

int main(int argc, char ** argv) {

   Integrand integrand = {
	   .upper_limit = 0.0,  
	   .lower_limit = 10.0, 
	   .n_intervals = 5,  

   };

   int n_terms = 1;         

   Fourier fourier = {
	   .intg      = integrand,
	   .n_terms   = n_terms,
	   .a_i       = NULL,//malloc(sizeof(*fourier.a_i) * n_terms),
	   .b_i       = NULL//malloc(sizeof(*fourier.b_i) * n_terms)
   };

  

  // fourier_coefficients(fourier);


	if (argc != 6)
	{
		EXIT_FAILURE;
	}

	fourier.n_terms = atoi(argv[5]);

	if (fourier.n_terms <= 1)
	{
		fourier.n_terms = 1;
	}
	
	printf("Num1\n");

	fourier.a_i = malloc(sizeof(*fourier.a_i) * n_terms);
	fourier.b_i = malloc(sizeof(*fourier.b_i) * n_terms);

	// If allocation of fourier.a_i and/or fourier.b_i failed, then free the
	// one that didn't fail and then exit with EXIT_FAILURE.
	if (fourier.a_i == NULL || fourier.b_i == NULL) {
	  free(fourier.a_i);  // free(..) has not effect if its argument is NULL
	  free(fourier.b_i);
	  return EXIT_FAILURE;
	}

	printf("Num2\n");

	if (argv[1][0] == '1' && argv[1][1] == '\0')
	{
		integrand.func_to_be_integrated = unknown_function_1;
	}

	else if (argv[1][0] == '2' && argv[1][1] == '\0')
	{
		integrand.func_to_be_integrated = unknown_function_2;
	}

	else if (argv[1][0] == '3' && argv[1][1] == '\0')
	{
		integrand.func_to_be_integrated = unknown_function_3;
	}


	integrand.lower_limit = atof(argv[2]);
	integrand.upper_limit = atof(argv[3]);
	integrand.n_intervals = atoi(argv[4]);
	
	printf("Hello\n");
	fourier_coefficients(fourier);
	printf("Hello4\n");
   print_fourier_coefficients(fourier.a_i, fourier.b_i, 
                              fourier.n_terms);

   free(fourier.a_i);
   free(fourier.b_i);

   return EXIT_SUCCESS;
} 
